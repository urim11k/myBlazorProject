@page "/attendance"
@using BlazorEventCardExample.Services

<h3>Attendance Tracker</h3>

@if (session.CurrentUser is null)
{
    <p>Please <a href="/register">register</a> or log in first.</p>
}
else
{
    <p><strong>User:</strong> @session.CurrentUser.FullName (@session.CurrentUser.Email)</p>

    <div class="mt-3">
        <label for="studentNameInput">Student Name:</label>
        <InputText @bind-Value="newAttendee" class="form-control" id="studentNameInput" />
        <button class="btn btn-primary mt-2" @onclick="AddAttendee">Add Attendee</button>
    </div>

    <ul class="list-group mt-3">
        @foreach (var attendee in attendees)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                @attendee.Name
                <input type="checkbox" @bind="attendee.IsPresent" />
            </li>
        }
    </ul>

    <button class="btn btn-success mt-3" @onclick="SaveAttendance">Save Attendance</button>
    <button class="btn btn-danger mt-3" @onclick="Logout">Logout</button>
}

@code {
    // We keep track of who is present
    private List<Attendee> attendees = new()
    {
        new Attendee { Name = "Alice" },
        new Attendee { Name = "Bob" },
    };

    private string newAttendee = string.Empty;

    private void AddAttendee()
    {
        if (!string.IsNullOrWhiteSpace(newAttendee))
        {
            attendees.Add(new Attendee { Name = newAttendee });
            newAttendee = string.Empty;
        }
    }

    private void SaveAttendance()
    {
        // In a real app, you'd save to a database or call an API
        Console.WriteLine("Attendance has been saved!");
        // For demo, just show console output
    }

    private async Task Logout()
    {
        await session.ClearUserAsync();
        // e.g. navigate to home or refresh the page
        navManager.NavigateTo("/");
    }

    [Inject]
    private SessionManager session { get; set; } = default!;

    [Inject]
    private NavigationManager navManager { get; set; } = default!;

    private class Attendee
    {
        public string Name { get; set; } = string.Empty;
        public bool IsPresent { get; set; }
    }
}
